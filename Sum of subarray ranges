class Solution {
    public long subArrayRanges(int[] nums) {
        int n = nums.length;
        long minans = 0;
        long maxans = 0;

        for (int i = 0; i < n; i++) {
            int left = 1, right = 1;

            int j = i - 1;
            while (j >= 0 && nums[j] > nums[i]) {
                left++;
                j--;
            }

            int k = i + 1;
            while (k < n && nums[k] >= nums[i]) {
                right++;
                k++;
            }

            minans += (long) nums[i] * left * right;
        }

        for (int i = 0; i < n; i++) {
            int left = 1, right = 1;

            int j = i - 1;
            while (j >= 0 && nums[j] < nums[i]) {
                left++;
                j--;
            }

            int k = i + 1;
            while (k < n && nums[k] <= nums[i]) {
                right++;
                k++;
            }

            maxans += (long) nums[i] * left * right;
        }

        return maxans - minans;
    }
}
