class Solution {
    public List<String> generateParenthesis(int n) {
        List<String> res = new ArrayList<>();
        gP(res, new StringBuilder(), 0, 0, n);
        return res;
    }
    public void gP(List<String> res, StringBuilder curr, int open, int close, int n) {
        if (curr.length() == n * 2) {
            res.add(curr.toString());
            return;
        }
        if (open < n) {
            curr.append("(");
            gP(res, curr, open+1, close, n);
            curr.deleteCharAt(curr.length()-1);
        }
        if (close < open) {
            curr.append(")");
            gP(res, curr, open, close+1, n);
            curr.deleteCharAt(curr.length()-1);
        }
    }
}
