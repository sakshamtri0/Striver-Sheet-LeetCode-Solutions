class Solution {
    public int splitArray(int[] nums, int k) {
        long sum =0;
        long max = 0;
        for (int i = 0; i < nums.length; i++) {
            sum += nums[i];
            max = Math.max(max, nums[i]);
        }
        if (k == 1) {
            return (int)sum;
        }
        long low = max ;
        long high = sum;
        long ans = 0;
        while (low <= high) {
            long mid = low + (high - low)/2;
            if (valid(mid, nums, k)) {
                ans = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return (int) ans;
    }

    private boolean valid(long m, int[] nums, int k) {
        int count = 1;
        int total = 0;
        for (int num : nums) {
            total += num;
            if (total > m) {
                total = num;
                count++;
                if (count > k) {
                    return false;
                }
            }
        }
        return true;
    }   
}
