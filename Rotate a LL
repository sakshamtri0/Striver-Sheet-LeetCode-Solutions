class Solution {
    int findLength(ListNode head)
    {
        ListNode temp = head;
        int count = 0;
        while(temp!=null)
        {
            temp = temp.next;
            count++;
        }
        return count;
    }
    public ListNode rotateRight(ListNode head, int k) {
        if(head==null || head.next==null) return head;
        ListNode temp = head;
        int len = findLength(head);
        k = k % len ;
        if(k==0)
        return head;
        int end = len-k-1;
        for(int i=0;i<end;i++)
        {
            temp = temp.next;
        }
        ListNode lastNode = temp;
        ListNode newHead = lastNode.next;
        lastNode.next = null;

        ListNode it = newHead;
        while(it.next!=null) 
        {
            it = it.next;
        }
        it.next = head;

        return newHead;
    }
}
